apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: gpu-feature-discovery
  namespace: gpu-operator
  labels:
    app: gpu-feature-discovery
    app.kubernetes.io/name: gpu-feature-discovery
    app.kubernetes.io/part-of: nvidia-gpu-operator
spec:
  selector:
    matchLabels:
      app: gpu-feature-discovery
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
  template:
    metadata:
      labels:
        app: gpu-feature-discovery
        app.kubernetes.io/name: gpu-feature-discovery
        app.kubernetes.io/part-of: nvidia-gpu-operator
    spec:
      serviceAccountName: gpu-feature-discovery
      containers:
      - name: gpu-feature-discovery
        image: nvcr.io/nvidia/gpu-feature-discovery:v0.6.2
        imagePullPolicy: IfNotPresent
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: MIG_STRATEGY
          value: "none"
        - name: FAIL_ON_INIT_ERROR
          value: "true"
        - name: SLEEP_INTERVAL
          value: "60s"
        - name: GFD_SLEEP_INTERVAL
          value: "60s"
        - name: GFD_FAIL_ON_INIT_ERROR
          value: "true"
        resources:
          limits:
            cpu: "1"
            memory: "1Gi"
          requests:
            cpu: "500m"
            memory: "512Mi"
        volumeMounts:
        - name: output-dir
          mountPath: /etc/kubernetes/node-feature-discovery/features.d
        - name: host-sys
          mountPath: /sys
          readOnly: true
        - name: config
          mountPath: /etc/gpu-feature-discovery
          readOnly: true
        securityContext:
          privileged: true
      volumes:
      - name: output-dir
        hostPath:
          path: /etc/kubernetes/node-feature-discovery/features.d
          type: DirectoryOrCreate
      - name: host-sys
        hostPath:
          path: /sys
          type: Directory
      - name: config
        configMap:
          name: gpu-feature-discovery-config
          optional: true
      nodeSelector:
        nvidia.com/gpu.present: "true"
      tolerations:
      - key: nvidia.com/gpu
        operator: Exists
        effect: NoSchedule
      - key: node-role.kubernetes.io/master
        operator: Exists
        effect: NoSchedule
      - key: node-role.kubernetes.io/control-plane
        operator: Exists
        effect: NoSchedule
      hostNetwork: true
      hostPID: true
      priorityClassName: system-node-critical
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: gpu-feature-discovery
  namespace: gpu-operator
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: gpu-feature-discovery
rules:
- apiGroups: [""]
  resources: ["nodes"]
  verbs: ["get", "patch", "update", "list"]
- apiGroups: [""]
  resources: ["nodes/status"]
  verbs: ["patch", "update"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: gpu-feature-discovery
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: gpu-feature-discovery
subjects:
- kind: ServiceAccount
  name: gpu-feature-discovery
  namespace: gpu-operator
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: gpu-feature-discovery-config
  namespace: gpu-operator
data:
  config.yaml: |
    version: v1
    flags:
      migStrategy: "none"
      failOnInitError: true
      sleepInterval: 60s
      noTimestamp: false
      outputFile: /etc/kubernetes/node-feature-discovery/features.d/gfd
      machineTypeFile: /sys/class/dmi/id/product_name